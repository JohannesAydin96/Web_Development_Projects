@model ProjectApp.Data.Models.Auction

@{
    ViewData["Title"] = "Home Page";
}

<style>
    /* Main container */
    .auction-container {
        max-width: 1200px;
        margin: 30px auto;
        background-color: #ffffff;
        border-radius: 8px;
        margin-top: 125px !important;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    /* Header Section */
    .header {
        display: flex;
        padding:10px;
        justify-content: space-between;
        align-items: center;
        background-color: #2c3e50;
        border-radius:8px 8px 0px 0px ;
        margin-bottom: 20px;
    }

        .header h2 {
            font-size: 1.8rem;
            color:white;
            /* Blue color */
            font-weight: 600;
        }

    /* Content Section */
    .content {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }

    .image img {
        width: 100%;
        max-width: 500px;
        height: auto;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .details {
        flex: 1;
        padding-left: 20px;
        display: flex;
        flex-direction: column;
    }

    /* Bids and Current Price Sections with Border */
    .bid-info {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
    }

        .bid-info div {
            width: 48%;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9fafb;
        }

        

    /* Bid Increase Inputs */
    .bid-increase {
        display: flex;
        gap:50px;
        margin-bottom: 15px;
    }

        .bid-increase label {
            font-weight: bold;
            font-size: 0.95rem;
            color: #333;
        }

        .bid-increase input {
            width: 100px;
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #ddd;
            font-size: 1rem;
            margin-left: 10px;
        }

    /* Login Button */
    .login-btn {
        width: 100%;
        padding: 12px;
        background-color: #3498db;
        /* Green */
        color: white;
        font-size: 1.1rem;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s;
        font-weight: bold;
        /* max-width: 500px; */
        /* Match image width */
        align-self: flex-start;
    }

        .login-btn:hover {
            background-color: #2c3e50;
            /* Darker Green */
        }

    /* Description Section */
    .description {
        font-size: 1rem;
        margin-top: 10px;
        background-color: #f9fafb;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        border: 1px solid #ddd;
        /* Border added */
    }

    /* .description p {
                                margin-top: 10px;
                            } */

    strong {
        font-weight: bold;
    }

    /* Condition Section with Border */
    .condition {
        margin-top: 10px;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f9fafb;
    }

    /* .bid_inform {
        color: lightslategrey;
    } */

    .bid_line {
        color: lightslategrey;
        margin: 10px 0px;
    }


    /* Price Modal Styles */
    .price-modal {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        z-index: 1000;
    }

        .price-modal input {
            padding: 8px;
            width: 100%;
            margin-bottom: 10px;
            border-radius: 4px;
            border: 1px solid #ddd;
        }

    .submit_btn {
            padding: 10px 20px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            width: 100%;
    }

    .submit_btn:hover {
                background-color: #2c3e50;
    }

    /* Overlay */
    .overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
    }

    .table-box{
        width:265px !important

    }
    .table-box strong{
        background-color: #2c3e50;
    }




</style>

@if (User.Identity.IsAuthenticated)
{
    @if (Model != null)
    {
        <div class="auction-container">
            <div class="header p-3">
                <h2 class="m-0">@Model.Name</h2>
                <input type="hidden" id="hdAunction" value="@Model.Id" />
            </div>

            <div class="content px-2 py-1">
                <div class="details">
                    <p class="d-flex align-items-center p-2 border border-1 text-white rounded shadow-sm table-box">
                        <strong class=" text-light px-2 py-1 rounded text-sm font-weight-medium">Bids :</strong>
                        <span class="text-xl font-weight-bold px-2 ms-2 text-dark">
                        @Model.Bids.Count
                        </span>
                    </p>
                    <p class="d-flex align-items-center p-2 border border-1 text-white rounded shadow-sm table-box">
                        <strong class=" text-light px-2 py-1 rounded text-sm font-weight-medium">
                            Current Price :
                        </strong>
                        <span class="text-xl font-weight-bold px-2 ms-2 text-dark">
                            @Model.StartingPrice.ToString("F2")
                        </span>
                        <strong class=" text-light px-2 py-1 rounded fs-6 ms-2">
                            €
                        </strong>
                    </p>

                    <div class="bid_inform my-1">
                        <h4>BID INFORMATION</h4>
                        <hr class="bid_line" />
                    </div>

                    <div class="bid-increase">
                        <div>
                            <label for="min-increase">Min Increase :</label>
                            <input type="number" id="min-increase" value="@ViewBag.minValue" />
                        </div>
                        <div>
                            <label for="max-increase">Max Increase :</label>
                            <input type="number" id="max-increase" value="@ViewBag.maxValue" />
                        </div>
                       
                    </div>
                </div>
                
            </div>

            <div class="p-3">
                <div class="description mb-3">
                    <p><strong>Description:</strong> @Html.Raw(@Model.Description)</p>
                </div>
                 <div class="dvBids ">
                     @Html.Partial("_AuctionDetails", Model)
                </div>
            </div>
           

           

            <div id="overlay" class="overlay"></div>

            <div id="priceModal" class="price-modal">
                <div class="modal-header justify-content-between mb-1">
                    <h5 class="m-0">Enter Your Offer</h5>
                    <button type="button" id="closeModalBtn" class="btn-close w-0 bg-transparent" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>    
                <input type="text" id="priceInput" name="price" placeholder="Enter price in €" required />
                <input type="hidden" id="auctionId" value="your-auction-id-here" />
                <button type="submit" id="priceForm" class="submit_btn">Submit Offer</button>
                <span id="priceError" class="error-message" style="color: red; display: none;">Please enter a valid price.</span>
            </div>
        </div>
    }
    else
    {
        <div>No record found</div>
    }
}
else
{
    <div>No record found</div>
}


<script>
    // Get elements
    const buildBtn = document.getElementById('buildBtn');
    const priceModal = document.getElementById('priceModal');
    const closeModalBtn = document.getElementById('closeModalBtn');
    const overlay = document.getElementById('overlay');
    const submitPriceBtn = document.getElementById('submitPriceBtn');
    const priceInput = document.getElementById('priceInput');

    // Show price modal
    buildBtn.addEventListener('click', function (e) {
        e.preventDefault();
        priceModal.style.display = 'block';
        overlay.style.display = 'block';
    });

    closeModalBtn.addEventListener('click', function () {
        priceModal.style.display = 'none';
        overlay.style.display = 'none';
    });

    $(document).ready(function () {


    @if (TempData["ToastrMessage"] != null && TempData["ToastrType"] != null)
    {
        <text>
                toastr["@TempData["ToastrType"]"]("@TempData["ToastrMessage"]");
        </text>
    }

            $('#priceForm').on('click', function (event) {
                event.preventDefault(); // Prevent the form from submitting traditionally

                // Collect form data
                const formData = {
                    AuctionId: $('#hdAunction').val(),
                    BidAmount: $('#priceInput').val().trim()
                };

                $.ajax({
                    url: "/Auction/PlaceBid",
                    type: "POST",
                    contentType: "application/json; charset=utf-8", // Ensure correct content type
                    data: JSON.stringify(formData), // Send data as JSON string
                    success: function (response) {
                        if (response.success) {

                            toastr.success('Your bid has been placed successfully!');
                            // getOnwardAuctions();
                            $("#addListModal").remove();
                            // $("#addListForm")[0].reset();
                            window.location.reload();

                        } else {
                            alert("Failed to add item: " + response.message);
                        }
                    },
                    error: function () {
                        alert("An error occurred while adding the item. Please try again later.");
                    }
                });



                // Validate the price input
                if (!priceInput || isNaN(priceInput) || parseFloat(priceInput) <= 0) {
                    priceError.text('Please enter a valid positive number.').show();
                    return;
                } else {
                    priceError.hide();
                }

            });

    });
</script>